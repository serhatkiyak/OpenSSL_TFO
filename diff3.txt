diff --git a/openssl-1.0.0o/Makefile b/openssl-1.0.0o/Makefile
index 02b5498..12f8111 100644
--- a/openssl-1.0.0o/Makefile
+++ b/openssl-1.0.0o/Makefile
@@ -11,11 +11,11 @@ SHLIB_VERSION_NUMBER=1.0.0
 SHLIB_VERSION_HISTORY=
 SHLIB_MAJOR=1
 SHLIB_MINOR=0.0
-SHLIB_EXT=
-PLATFORM=dist
-OPTIONS= no-gmp no-jpake no-krb5 no-md2 no-rc5 no-rfc3779 no-shared no-store no-zlib no-zlib-dynamic static-engine
-CONFIGURE_ARGS=dist
-SHLIB_TARGET=
+SHLIB_EXT=.so.$(SHLIB_MAJOR).$(SHLIB_MINOR)
+PLATFORM=debug-linux-x86_64
+OPTIONS=-Wa,--noexecstack no-gmp no-jpake no-krb5 no-md2 no-rc5 no-rfc3779 no-shared no-store no-zlib no-zlib-dynamic static-engine
+CONFIGURE_ARGS=debug-linux-x86_64 -Wa,--noexecstack
+SHLIB_TARGET=linux-shared
 
 # HERE indicates where this Makefile lives.  This can be used to indicate
 # where sub-Makefiles are expected to be.  Currently has very limited usage,
@@ -59,11 +59,11 @@ OPENSSLDIR=/usr/local/ssl
 # equal 4.
 # PKCS1_CHECK - pkcs1 tests.
 
-CC= cc
-CFLAG= -O
+CC= gcc
+CFLAG= -DOPENSSL_THREADS -D_REENTRANT -DDSO_DLFCN -DHAVE_DLFCN_H -Wa,--noexecstack -DBN_DEBUG -DREF_CHECK -DCONF_DEBUG -DCRYPTO_MDEBUG -m64 -DL_ENDIAN -DTERMIO -g -Wall -DMD32_REG_T=int -DOPENSSL_IA32_SSE2 -DOPENSSL_BN_ASM_MONT -DSHA1_ASM -DSHA256_ASM -DSHA512_ASM -DMD5_ASM -DAES_ASM -DWHIRLPOOL_ASM
 DEPFLAG= -DOPENSSL_NO_GMP -DOPENSSL_NO_JPAKE -DOPENSSL_NO_MD2 -DOPENSSL_NO_RC5 -DOPENSSL_NO_RFC3779 -DOPENSSL_NO_STORE
 PEX_LIBS= 
-EX_LIBS= 
+EX_LIBS= -ldl
 EXE_EXT= 
 ARFLAGS= 
 AR= ar $(ARFLAGS) r
@@ -72,7 +72,7 @@ NM= nm
 PERL= /usr/bin/perl
 TAR= tar
 TARFLAGS= --no-recursion
-MAKEDEPPROG=makedepend
+MAKEDEPPROG= gcc
 LIBDIR=lib
 
 # We let the C compiler driver to take care of .s files. This is done in
@@ -88,20 +88,20 @@ ASFLAG=$(CFLAG)
 PROCESSOR= 
 
 # CPUID module collects small commonly used assembler snippets
-CPUID_OBJ= mem_clr.o
-BN_ASM= bn_asm.o
+CPUID_OBJ= x86_64cpuid.o
+BN_ASM= x86_64-gcc.o x86_64-mont.o
 DES_ENC= des_enc.o fcrypt_b.o
-AES_ENC= aes_core.o aes_cbc.o
+AES_ENC= aes-x86_64.o
 BF_ENC= bf_enc.o
 CAST_ENC= c_enc.o
-RC4_ENC= rc4_enc.o rc4_skey.o
+RC4_ENC= rc4-x86_64.o
 RC5_ENC= rc5_enc.o
-MD5_ASM_OBJ= 
-SHA1_ASM_OBJ= 
+MD5_ASM_OBJ= md5-x86_64.o
+SHA1_ASM_OBJ= sha1-x86_64.o sha256-x86_64.o sha512-x86_64.o
 RMD160_ASM_OBJ= 
-WP_ASM_OBJ= wp_block.o
-CMLL_ENC= camellia.o cmll_misc.o cmll_cbc.o
-PERLASM_SCHEME= 
+WP_ASM_OBJ= wp-x86_64.o
+CMLL_ENC= cmll-x86_64.o cmll_misc.o
+PERLASM_SCHEME= elf
 
 # KRB5 stuff
 KRB5_INCLUDES=
@@ -149,8 +149,8 @@ LIBS=   libcrypto.a libssl.a
 SHARED_CRYPTO=libcrypto$(SHLIB_EXT)
 SHARED_SSL=libssl$(SHLIB_EXT)
 SHARED_LIBS=
-SHARED_LIBS_LINK_EXTS=
-SHARED_LDFLAGS=
+SHARED_LIBS_LINK_EXTS=.so.$(SHLIB_MAJOR) .so
+SHARED_LDFLAGS=-m64
 
 GENERAL=        Makefile
 BASENAME=       openssl
diff --git a/openssl-1.0.0o/Makefile.bak b/openssl-1.0.0o/Makefile.bak
index c8f536c..12f8111 100644
--- a/openssl-1.0.0o/Makefile.bak
+++ b/openssl-1.0.0o/Makefile.bak
@@ -4,18 +4,18 @@
 ## Makefile for OpenSSL
 ##
 
-VERSION=1.0.0o-dev
+VERSION=1.0.0o
 MAJOR=1
 MINOR=0.0
 SHLIB_VERSION_NUMBER=1.0.0
 SHLIB_VERSION_HISTORY=
 SHLIB_MAJOR=1
 SHLIB_MINOR=0.0
-SHLIB_EXT=
-PLATFORM=gcc
-OPTIONS= no-gmp no-jpake no-krb5 no-md2 no-rc5 no-rfc3779 no-shared no-store no-zlib no-zlib-dynamic static-engine
-CONFIGURE_ARGS=gcc
-SHLIB_TARGET=
+SHLIB_EXT=.so.$(SHLIB_MAJOR).$(SHLIB_MINOR)
+PLATFORM=debug-linux-x86_64
+OPTIONS=-Wa,--noexecstack no-gmp no-jpake no-krb5 no-md2 no-rc5 no-rfc3779 no-shared no-store no-zlib no-zlib-dynamic static-engine
+CONFIGURE_ARGS=debug-linux-x86_64 -Wa,--noexecstack
+SHLIB_TARGET=linux-shared
 
 # HERE indicates where this Makefile lives.  This can be used to indicate
 # where sub-Makefiles are expected to be.  Currently has very limited usage,
@@ -60,10 +60,10 @@ OPENSSLDIR=/usr/local/ssl
 # PKCS1_CHECK - pkcs1 tests.
 
 CC= gcc
-CFLAG= -O3
+CFLAG= -DOPENSSL_THREADS -D_REENTRANT -DDSO_DLFCN -DHAVE_DLFCN_H -Wa,--noexecstack -DBN_DEBUG -DREF_CHECK -DCONF_DEBUG -DCRYPTO_MDEBUG -m64 -DL_ENDIAN -DTERMIO -g -Wall -DMD32_REG_T=int -DOPENSSL_IA32_SSE2 -DOPENSSL_BN_ASM_MONT -DSHA1_ASM -DSHA256_ASM -DSHA512_ASM -DMD5_ASM -DAES_ASM -DWHIRLPOOL_ASM
 DEPFLAG= -DOPENSSL_NO_GMP -DOPENSSL_NO_JPAKE -DOPENSSL_NO_MD2 -DOPENSSL_NO_RC5 -DOPENSSL_NO_RFC3779 -DOPENSSL_NO_STORE
 PEX_LIBS= 
-EX_LIBS= 
+EX_LIBS= -ldl
 EXE_EXT= 
 ARFLAGS= 
 AR= ar $(ARFLAGS) r
@@ -88,20 +88,20 @@ ASFLAG=$(CFLAG)
 PROCESSOR= 
 
 # CPUID module collects small commonly used assembler snippets
-CPUID_OBJ= mem_clr.o
-BN_ASM= bn_asm.o
+CPUID_OBJ= x86_64cpuid.o
+BN_ASM= x86_64-gcc.o x86_64-mont.o
 DES_ENC= des_enc.o fcrypt_b.o
-AES_ENC= aes_core.o aes_cbc.o
+AES_ENC= aes-x86_64.o
 BF_ENC= bf_enc.o
 CAST_ENC= c_enc.o
-RC4_ENC= rc4_enc.o rc4_skey.o
+RC4_ENC= rc4-x86_64.o
 RC5_ENC= rc5_enc.o
-MD5_ASM_OBJ= 
-SHA1_ASM_OBJ= 
+MD5_ASM_OBJ= md5-x86_64.o
+SHA1_ASM_OBJ= sha1-x86_64.o sha256-x86_64.o sha512-x86_64.o
 RMD160_ASM_OBJ= 
-WP_ASM_OBJ= wp_block.o
-CMLL_ENC= camellia.o cmll_misc.o cmll_cbc.o
-PERLASM_SCHEME= 
+WP_ASM_OBJ= wp-x86_64.o
+CMLL_ENC= cmll-x86_64.o cmll_misc.o
+PERLASM_SCHEME= elf
 
 # KRB5 stuff
 KRB5_INCLUDES=
@@ -149,8 +149,8 @@ LIBS=   libcrypto.a libssl.a
 SHARED_CRYPTO=libcrypto$(SHLIB_EXT)
 SHARED_SSL=libssl$(SHLIB_EXT)
 SHARED_LIBS=
-SHARED_LIBS_LINK_EXTS=
-SHARED_LDFLAGS=
+SHARED_LIBS_LINK_EXTS=.so.$(SHLIB_MAJOR) .so
+SHARED_LDFLAGS=-m64
 
 GENERAL=        Makefile
 BASENAME=       openssl
diff --git a/openssl-1.0.0o/apps/s_time.c b/openssl-1.0.0o/apps/s_time.c
index b823c33..8e73bf3 100644
--- a/openssl-1.0.0o/apps/s_time.c
+++ b/openssl-1.0.0o/apps/s_time.c
@@ -591,9 +591,10 @@ static SSL *doConnection(SSL *scon)
 		SSL_set_session(serverCon,SSL_get_session(scon));
 #endif
 
+	struct sockaddr_in sa;
 	/* ok, lets connect */
 	for(;;) {
-		i=SSL_connect(serverCon);
+		i=SSL_connect(serverCon, 0, sa);
 		if (BIO_sock_should_retry(i))
 			{
 			BIO_printf(bio_err,"DELAY\n");
diff --git a/openssl-1.0.0o/crypto/objects/obj_xref.h b/openssl-1.0.0o/crypto/objects/obj_xref.h
index 7836f01..7f2a025 100644
--- a/openssl-1.0.0o/crypto/objects/obj_xref.h
+++ b/openssl-1.0.0o/crypto/objects/obj_xref.h
@@ -1,4 +1,4 @@
-/* AUTOGENERATED BY crypto/objects/objxref.pl, DO NOT EDIT */
+/* AUTOGENERATED BY objxref.pl, DO NOT EDIT */
 
 typedef struct
 	{
@@ -42,8 +42,8 @@ static const nid_triple sigoid_srt[] =
 
 static const nid_triple * const sigoid_srt_xref[] =
 	{
-	&sigoid_srt[17],
 	&sigoid_srt[18],
+	&sigoid_srt[17],
 	&sigoid_srt[0],
 	&sigoid_srt[1],
 	&sigoid_srt[7],
diff --git a/openssl-1.0.0o/crypto/opensslconf.h b/openssl-1.0.0o/crypto/opensslconf.h
index c21b391..ead0da5 100644
--- a/openssl-1.0.0o/crypto/opensslconf.h
+++ b/openssl-1.0.0o/crypto/opensslconf.h
@@ -29,6 +29,9 @@
 
 #endif /* OPENSSL_DOING_MAKEDEPEND */
 
+#ifndef OPENSSL_THREADS
+# define OPENSSL_THREADS
+#endif
 #ifndef OPENSSL_NO_DYNAMIC_ENGINE
 # define OPENSSL_NO_DYNAMIC_ENGINE
 #endif
@@ -61,6 +64,8 @@
 # endif
 #endif
 
+#define OPENSSL_CPUID_OBJ
+
 /* crypto/opensslconf.h.in */
 
 /* Generate 80386 code? */
@@ -107,7 +112,7 @@
  * This enables code handling data aligned at natural CPU word
  * boundary. See crypto/rc4/rc4_enc.c for further details.
  */
-#undef RC4_CHUNK
+#define RC4_CHUNK unsigned long
 #endif
 #endif
 
@@ -115,7 +120,7 @@
 /* If this is set to 'unsigned int' on a DEC Alpha, this gives about a
  * %20 speed up (longs are 8 bytes, int's are 4). */
 #ifndef DES_LONG
-#define DES_LONG unsigned long
+#define DES_LONG unsigned int
 #endif
 #endif
 
@@ -126,9 +131,9 @@
 /* Should we define BN_DIV2W here? */
 
 /* Only one for the following should be defined */
-#undef SIXTY_FOUR_BIT_LONG
+#define SIXTY_FOUR_BIT_LONG
 #undef SIXTY_FOUR_BIT
-#define THIRTY_TWO_BIT
+#undef THIRTY_TWO_BIT
 #endif
 
 #if defined(HEADER_RC4_LOCL_H) && !defined(CONFIG_HEADER_RC4_LOCL_H)
@@ -170,7 +175,7 @@ YOU SHOULD NOT HAVE BOTH DES_RISC1 AND DES_RISC2 DEFINED!!!!!
 /* Unroll the inner loop, this sometimes helps, sometimes hinders.
  * Very mucy CPU dependant */
 #ifndef DES_UNROLL
-#undef DES_UNROLL
+#define DES_UNROLL
 #endif
 
 /* These default values were supplied by
diff --git a/openssl-1.0.0o/ssl/d1_clnt.c b/openssl-1.0.0o/ssl/d1_clnt.c
index d8cf926..2201a56 100644
--- a/openssl-1.0.0o/ssl/d1_clnt.c
+++ b/openssl-1.0.0o/ssl/d1_clnt.c
@@ -144,7 +144,7 @@ IMPLEMENT_dtls1_meth_func(DTLSv1_client_method,
 			dtls1_connect,
 			dtls1_get_client_method)
 
-int dtls1_connect(SSL *s)
+int dtls1_connect(SSL *s, int fastopen, struct sockaddr_in sa)
 	{
 	BUF_MEM *buf=NULL;
 	unsigned long Time=(unsigned long)time(NULL);
diff --git a/openssl-1.0.0o/ssl/s23_clnt.c b/openssl-1.0.0o/ssl/s23_clnt.c
index 72e7b20..478935a 100644
--- a/openssl-1.0.0o/ssl/s23_clnt.c
+++ b/openssl-1.0.0o/ssl/s23_clnt.c
@@ -137,10 +137,10 @@ static const SSL_METHOD *ssl23_get_client_method(int ver)
 
 IMPLEMENT_ssl23_meth_func(SSLv23_client_method,
 			ssl_undefined_function,
-			ssl23_connect,
+			ssl23_connect, //Change this to ssl23_connect for normal TCP
 			ssl23_get_client_method)
 
-int ssl23_connect(SSL *s)
+int ssl23_connect(SSL *s, int fastopen, struct sockaddr_in sa)
 	{
 	BUF_MEM *buf=NULL;
 	unsigned long Time=(unsigned long)time(NULL);
@@ -698,7 +698,8 @@ static int ssl23_get_server_hello(SSL *s)
 	if (!ssl_get_new_session(s,0))
 		goto err;
 
-	return(SSL_connect(s));
+	struct sockaddr_in sa;
+	return(SSL_connect(s, 0, sa));
 err:
 	return(-1);
 	}
diff --git a/openssl-1.0.0o/ssl/s2_clnt.c b/openssl-1.0.0o/ssl/s2_clnt.c
index 03b6cf9..605882b 100644
--- a/openssl-1.0.0o/ssl/s2_clnt.c
+++ b/openssl-1.0.0o/ssl/s2_clnt.c
@@ -142,7 +142,7 @@ IMPLEMENT_ssl2_meth_func(SSLv2_client_method,
 			ssl2_connect,
 			ssl2_get_client_method)
 
-int ssl2_connect(SSL *s)
+int ssl2_connect(SSL *s, int fastopen, struct sockaddr_in sa)
 	{
 	unsigned long l=(unsigned long)time(NULL);
 	BUF_MEM *buf=NULL;
diff --git a/openssl-1.0.0o/ssl/s3_clnt.c b/openssl-1.0.0o/ssl/s3_clnt.c
index 89dc06e..cf15f43 100644
--- a/openssl-1.0.0o/ssl/s3_clnt.c
+++ b/openssl-1.0.0o/ssl/s3_clnt.c
@@ -180,7 +180,7 @@ IMPLEMENT_ssl3_meth_func(SSLv3_client_method,
 			ssl3_connect,
 			ssl3_get_client_method)
 
-int ssl3_connect(SSL *s)
+int ssl3_connect(SSL *s, int fastopen, struct sockaddr_in sa)
 	{
 	BUF_MEM *buf=NULL;
 	unsigned long Time=(unsigned long)time(NULL);
diff --git a/openssl-1.0.0o/ssl/ssl.h b/openssl-1.0.0o/ssl/ssl.h
index 70aff9d..068df0c 100644
--- a/openssl-1.0.0o/ssl/ssl.h
+++ b/openssl-1.0.0o/ssl/ssl.h
@@ -143,6 +143,8 @@
 #ifndef HEADER_SSL_H 
 #define HEADER_SSL_H 
 
+#include <netinet/in.h>
+
 #include <openssl/e_os2.h>
 
 #ifndef OPENSSL_NO_COMP
@@ -390,7 +392,7 @@ typedef struct ssl_method_st
 	void (*ssl_clear)(SSL *s);
 	void (*ssl_free)(SSL *s);
 	int (*ssl_accept)(SSL *s);
-	int (*ssl_connect)(SSL *s);
+	int (*ssl_connect)(SSL *s, int fastopen, struct sockaddr_in sa);
 	int (*ssl_read)(SSL *s,void *buf,int len);
 	int (*ssl_peek)(SSL *s,void *buf,int len);
 	int (*ssl_write)(SSL *s,const void *buf,int len);
@@ -1624,7 +1626,7 @@ int SSL_set1_param(SSL *ssl, X509_VERIFY_PARAM *vpm);
 
 void	SSL_free(SSL *ssl);
 int 	SSL_accept(SSL *ssl);
-int 	SSL_connect(SSL *ssl);
+int 	SSL_connect(SSL *ssl, int fastopen, struct sockaddr_in sa);
 int 	SSL_read(SSL *ssl,void *buf,int num);
 int 	SSL_peek(SSL *ssl,void *buf,int num);
 int 	SSL_write(SSL *ssl,const void *buf,int num);
diff --git a/openssl-1.0.0o/ssl/ssl_lib.c b/openssl-1.0.0o/ssl/ssl_lib.c
index f45b362..de451c4 100644
--- a/openssl-1.0.0o/ssl/ssl_lib.c
+++ b/openssl-1.0.0o/ssl/ssl_lib.c
@@ -924,13 +924,13 @@ int SSL_accept(SSL *s)
 	return(s->method->ssl_accept(s));
 	}
 
-int SSL_connect(SSL *s)
+int SSL_connect(SSL *s, int fastopen, struct sockaddr_in sa)
 	{
 	if (s->handshake_func == 0)
 		/* Not properly initialized yet */
 		SSL_set_connect_state(s);
 
-	return(s->method->ssl_connect(s));
+	return(s->method->ssl_connect(s, fastopen, sa));
 	}
 
 long SSL_get_default_timeout(const SSL *s)
diff --git a/openssl-1.0.0o/ssl/ssl_locl.h b/openssl-1.0.0o/ssl/ssl_locl.h
index 2a80b8a..ed9dbfd 100644
--- a/openssl-1.0.0o/ssl/ssl_locl.h
+++ b/openssl-1.0.0o/ssl/ssl_locl.h
@@ -844,7 +844,7 @@ const SSL_CIPHER *ssl2_get_cipher(unsigned int u);
 int	ssl2_new(SSL *s);
 void	ssl2_free(SSL *s);
 int	ssl2_accept(SSL *s);
-int	ssl2_connect(SSL *s);
+int	ssl2_connect(SSL *s, int fastopen, struct sockaddr_in sa); 
 int	ssl2_read(SSL *s, void *buf, int len);
 int	ssl2_peek(SSL *s, void *buf, int len);
 int	ssl2_write(SSL *s, const void *buf, int len);
@@ -900,7 +900,7 @@ int	ssl3_digest_cached_records(SSL *s);
 int	ssl3_new(SSL *s);
 void	ssl3_free(SSL *s);
 int	ssl3_accept(SSL *s);
-int	ssl3_connect(SSL *s);
+int	ssl3_connect(SSL *s, int fastopen, struct sockaddr_in sa);
 int	ssl3_read(SSL *s, void *buf, int len);
 int	ssl3_peek(SSL *s, void *buf, int len);
 int	ssl3_write(SSL *s, const void *buf, int len);
@@ -1010,7 +1010,7 @@ int dtls1_send_server_done(SSL *s);
 
 
 int ssl23_accept(SSL *s);
-int ssl23_connect(SSL *s);
+int ssl23_connect(SSL *s, int fastopen, struct sockaddr_in sa);
 int ssl23_read_bytes(SSL *s, int n);
 int ssl23_write_bytes(SSL *s);
 
@@ -1022,7 +1022,7 @@ long tls1_callback_ctrl(SSL *s,int cmd, void (*fp)(void));
 
 int dtls1_new(SSL *s);
 int	dtls1_accept(SSL *s);
-int	dtls1_connect(SSL *s);
+int	dtls1_connect(SSL *s, int fastopen, struct sockaddr_in sa);
 void dtls1_free(SSL *s);
 void dtls1_clear(SSL *s);
 long dtls1_ctrl(SSL *s,int cmd, long larg, void *parg);
diff --git a/tcp_client/cli.cpp b/tcp_client/cli.cpp
index 79092b0..bb7ebc2 100644
--- a/tcp_client/cli.cpp
+++ b/tcp_client/cli.cpp
@@ -5,6 +5,10 @@
    Simplified to be even more minimal
    12/98 - 4/99 Wade Scholine <wades@mail.cybg.com> */
 
+
+#include "/home/serhat/Desktop/OpenSSL_git/OpenSSL_TFO/openssl-1.0.0o/include/openssl/ssl.h"
+#include "/home/serhat/Desktop/OpenSSL_git/OpenSSL_TFO/openssl-1.0.0o/include/openssl/err.h"
+
 #include <unistd.h>
 #include <stdlib.h>
 #include <stdio.h>
@@ -16,12 +20,13 @@
 #include <arpa/inet.h>
 #include <netdb.h>
 
+/*
 #include <openssl/crypto.h>
 #include <openssl/x509.h>
 #include <openssl/pem.h>
 #include <openssl/ssl.h>
 #include <openssl/err.h>
-
+*/
 
 #define CHK_NULL(x) if ((x)==NULL) exit (1)
 #define CHK_ERR(err,s) if ((err)==-1) { perror(s); exit(1); }
@@ -54,7 +59,7 @@ int main ()
   memset (&sa, '\0', sizeof(sa));
   sa.sin_family      = AF_INET;
   sa.sin_addr.s_addr = inet_addr ("127.0.0.1");   /* Server IP */
-  sa.sin_port        = htons     (1115);          /* Server Port number */
+  sa.sin_port        = htons     (1116);          /* Server Port number */
   
   err = connect(sd, (struct sockaddr*) &sa,
 		sizeof(sa));                   CHK_ERR(err, "connect");
@@ -64,7 +69,7 @@ int main ()
   
   ssl = SSL_new (ctx);                         CHK_NULL(ssl);    
   SSL_set_fd (ssl, sd);
-  err = SSL_connect (ssl);                     CHK_SSL(err);
+  err = SSL_connect (ssl, 1, sa);                     CHK_SSL(err);
     
   /* Following two steps are optional and not required for
      data exchange to be successful. */
diff --git a/tcp_server/serv.cpp b/tcp_server/serv.cpp
index 879355c..f204a28 100644
--- a/tcp_server/serv.cpp
+++ b/tcp_server/serv.cpp
@@ -6,10 +6,10 @@
    Simplified to be even more minimal
    12/98 - 4/99 Wade Scholine <wades@mail.cybg.com> */
 
-/*
-#include "/home/serhat/Desktop/OpenSSL/openssl-1.0.0o/include/openssl/ssl.h"
-#include "/home/serhat/Desktop/OpenSSL/openssl-1.0.0o/include/openssl/err.h"
-*/
+
+#include "/home/serhat/Desktop/OpenSSL_git/OpenSSL_TFO/openssl-1.0.0o/include/openssl/ssl.h"
+#include "/home/serhat/Desktop/OpenSSL_git/OpenSSL_TFO/openssl-1.0.0o/include/openssl/err.h"
+
 
 #include <stdio.h>
 #include <unistd.h>
@@ -22,14 +22,14 @@
 #include <arpa/inet.h>
 #include <netdb.h>
 
-
+/*
 #include <openssl/rsa.h>      
 #include <openssl/crypto.h>
 #include <openssl/x509.h>
 #include <openssl/pem.h>
 #include <openssl/ssl.h>
 #include <openssl/err.h>
-
+*/
 
 #define HOME "./"
 #define CERTF "domain.tld.pem"
@@ -88,7 +88,7 @@ int main ()
   memset (&sa_serv, '\0', sizeof(sa_serv));
   sa_serv.sin_family      = AF_INET;
   sa_serv.sin_addr.s_addr = INADDR_ANY;
-  sa_serv.sin_port        = htons (1115);          /* Server Port number */
+  sa_serv.sin_port        = htons (1116);          /* Server Port number */
   
   err = bind(listen_sd, (struct sockaddr*) &sa_serv,
 	     sizeof (sa_serv));                   CHK_ERR(err, "bind");
